// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* manager_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  manager_reflection_ = NULL;
const ::google::protobuf::Descriptor* manager_layer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  manager_layer_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_test_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_test_2eproto() {
  protobuf_AddDesc_test_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "test.proto");
  GOOGLE_CHECK(file != NULL);
  manager_descriptor_ = file->message_type(0);
  static const int manager_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manager, t1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manager, manager_name_),
  };
  manager_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      manager_descriptor_,
      manager::internal_default_instance(),
      manager_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manager, _has_bits_),
      -1,
      -1,
      sizeof(manager),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manager, _internal_metadata_));
  manager_layer_descriptor_ = manager_descriptor_->nested_type(0);
  static const int manager_layer_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manager_layer, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manager_layer, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manager_layer, top_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manager_layer, bottom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manager_layer, phase_),
  };
  manager_layer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      manager_layer_descriptor_,
      manager_layer::internal_default_instance(),
      manager_layer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manager_layer, _has_bits_),
      -1,
      -1,
      sizeof(manager_layer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manager_layer, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_test_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      manager_descriptor_, manager::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      manager_layer_descriptor_, manager_layer::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_test_2eproto() {
  manager_default_instance_.Shutdown();
  delete manager_reflection_;
  manager_layer_default_instance_.Shutdown();
  delete manager_layer_reflection_;
}

void protobuf_InitDefaults_test_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  manager_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  manager_layer_default_instance_.DefaultConstruct();
  manager_default_instance_.get_mutable()->InitAsDefaultInstance();
  manager_layer_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_test_2eproto_once_);
void protobuf_InitDefaults_test_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_test_2eproto_once_,
                 &protobuf_InitDefaults_test_2eproto_impl);
}
void protobuf_AddDesc_test_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_test_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ntest.proto\"\214\001\n\007manager\022\032\n\002t1\030\001 \002(\0132\016.m"
    "anager.layer\022\024\n\014manager_name\030\002 \002(\t\032O\n\005la"
    "yer\022\014\n\004name\030\001 \002(\t\022\014\n\004type\030\002 \002(\005\022\013\n\003top\030\003"
    " \003(\005\022\016\n\006bottom\030\004 \001(\005\022\r\n\005phase\030\005 \001(\005", 155);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_test_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_test_2eproto_once_);
void protobuf_AddDesc_test_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_test_2eproto_once_,
                 &protobuf_AddDesc_test_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_test_2eproto {
  StaticDescriptorInitializer_test_2eproto() {
    protobuf_AddDesc_test_2eproto();
  }
} static_descriptor_initializer_test_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int manager_layer::kNameFieldNumber;
const int manager_layer::kTypeFieldNumber;
const int manager_layer::kTopFieldNumber;
const int manager_layer::kBottomFieldNumber;
const int manager_layer::kPhaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

manager_layer::manager_layer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_test_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager.layer)
}

void manager_layer::InitAsDefaultInstance() {
}

manager_layer::manager_layer(const manager_layer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manager.layer)
}

void manager_layer::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&phase_) -
    reinterpret_cast<char*>(&type_) + sizeof(phase_));
}

manager_layer::~manager_layer() {
  // @@protoc_insertion_point(destructor:manager.layer)
  SharedDtor();
}

void manager_layer::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void manager_layer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* manager_layer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return manager_layer_descriptor_;
}

const manager_layer& manager_layer::default_instance() {
  protobuf_InitDefaults_test_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<manager_layer> manager_layer_default_instance_;

manager_layer* manager_layer::New(::google::protobuf::Arena* arena) const {
  manager_layer* n = new manager_layer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void manager_layer::Clear() {
// @@protoc_insertion_point(message_clear_start:manager.layer)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(manager_layer, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<manager_layer*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 27u) {
    ZR_(type_, phase_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  top_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool manager_layer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager.layer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "manager.layer.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_top;
        break;
      }

      // repeated int32 top = 3;
      case 3: {
        if (tag == 24) {
         parse_top:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_top())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_top())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_top;
        if (input->ExpectTag(32)) goto parse_bottom;
        break;
      }

      // optional int32 bottom = 4;
      case 4: {
        if (tag == 32) {
         parse_bottom:
          set_has_bottom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottom_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_phase;
        break;
      }

      // optional int32 phase = 5;
      case 5: {
        if (tag == 40) {
         parse_phase:
          set_has_phase();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &phase_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager.layer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager.layer)
  return false;
#undef DO_
}

void manager_layer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager.layer)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "manager.layer.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // repeated int32 top = 3;
  for (int i = 0; i < this->top_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->top(i), output);
  }

  // optional int32 bottom = 4;
  if (has_bottom()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bottom(), output);
  }

  // optional int32 phase = 5;
  if (has_phase()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->phase(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manager.layer)
}

::google::protobuf::uint8* manager_layer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager.layer)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "manager.layer.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // repeated int32 top = 3;
  for (int i = 0; i < this->top_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->top(i), target);
  }

  // optional int32 bottom = 4;
  if (has_bottom()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bottom(), target);
  }

  // optional int32 phase = 5;
  if (has_phase()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->phase(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager.layer)
  return target;
}

size_t manager_layer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:manager.layer)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
size_t manager_layer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager.layer)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[3 / 32] & 24u) {
    // optional int32 bottom = 4;
    if (has_bottom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bottom());
    }

    // optional int32 phase = 5;
    if (has_phase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->phase());
    }

  }
  // repeated int32 top = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->top_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->top(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->top_size());
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void manager_layer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager.layer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const manager_layer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const manager_layer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager.layer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager.layer)
    UnsafeMergeFrom(*source);
  }
}

void manager_layer::MergeFrom(const manager_layer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager.layer)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void manager_layer::UnsafeMergeFrom(const manager_layer& from) {
  GOOGLE_DCHECK(&from != this);
  top_.UnsafeMergeFrom(from.top_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_bottom()) {
      set_bottom(from.bottom());
    }
    if (from.has_phase()) {
      set_phase(from.phase());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void manager_layer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager.layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void manager_layer::CopyFrom(const manager_layer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager.layer)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool manager_layer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void manager_layer::Swap(manager_layer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void manager_layer::InternalSwap(manager_layer* other) {
  name_.Swap(&other->name_);
  std::swap(type_, other->type_);
  top_.UnsafeArenaSwap(&other->top_);
  std::swap(bottom_, other->bottom_);
  std::swap(phase_, other->phase_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata manager_layer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = manager_layer_descriptor_;
  metadata.reflection = manager_layer_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int manager::kT1FieldNumber;
const int manager::kManagerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

manager::manager()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_test_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:manager)
}

void manager::InitAsDefaultInstance() {
  t1_ = const_cast< ::manager_layer*>(
      ::manager_layer::internal_default_instance());
}

manager::manager(const manager& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manager)
}

void manager::SharedCtor() {
  _cached_size_ = 0;
  manager_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  t1_ = NULL;
}

manager::~manager() {
  // @@protoc_insertion_point(destructor:manager)
  SharedDtor();
}

void manager::SharedDtor() {
  manager_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &manager_default_instance_.get()) {
    delete t1_;
  }
}

void manager::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* manager::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return manager_descriptor_;
}

const manager& manager::default_instance() {
  protobuf_InitDefaults_test_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<manager> manager_default_instance_;

manager* manager::New(::google::protobuf::Arena* arena) const {
  manager* n = new manager;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void manager::Clear() {
// @@protoc_insertion_point(message_clear_start:manager)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_t1()) {
      if (t1_ != NULL) t1_->::manager_layer::Clear();
    }
    if (has_manager_name()) {
      manager_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool manager::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manager)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .manager.layer t1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_t1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_manager_name;
        break;
      }

      // required string manager_name = 2;
      case 2: {
        if (tag == 18) {
         parse_manager_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_manager_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->manager_name().data(), this->manager_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "manager.manager_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manager)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manager)
  return false;
#undef DO_
}

void manager::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manager)
  // required .manager.layer t1 = 1;
  if (has_t1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->t1_, output);
  }

  // required string manager_name = 2;
  if (has_manager_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->manager_name().data(), this->manager_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "manager.manager_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->manager_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manager)
}

::google::protobuf::uint8* manager::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manager)
  // required .manager.layer t1 = 1;
  if (has_t1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->t1_, false, target);
  }

  // required string manager_name = 2;
  if (has_manager_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->manager_name().data(), this->manager_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "manager.manager_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->manager_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manager)
  return target;
}

size_t manager::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:manager)
  size_t total_size = 0;

  if (has_t1()) {
    // required .manager.layer t1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->t1_);
  }

  if (has_manager_name()) {
    // required string manager_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->manager_name());
  }

  return total_size;
}
size_t manager::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manager)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .manager.layer t1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->t1_);

    // required string manager_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->manager_name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void manager::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manager)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const manager* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const manager>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manager)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manager)
    UnsafeMergeFrom(*source);
  }
}

void manager::MergeFrom(const manager& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manager)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void manager::UnsafeMergeFrom(const manager& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_t1()) {
      mutable_t1()->::manager_layer::MergeFrom(from.t1());
    }
    if (from.has_manager_name()) {
      set_has_manager_name();
      manager_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manager_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void manager::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void manager::CopyFrom(const manager& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manager)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool manager::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_t1()) {
    if (!this->t1_->IsInitialized()) return false;
  }
  return true;
}

void manager::Swap(manager* other) {
  if (other == this) return;
  InternalSwap(other);
}
void manager::InternalSwap(manager* other) {
  std::swap(t1_, other->t1_);
  manager_name_.Swap(&other->manager_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata manager::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = manager_descriptor_;
  metadata.reflection = manager_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// manager_layer

// required string name = 1;
bool manager_layer::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void manager_layer::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void manager_layer::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void manager_layer::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& manager_layer::name() const {
  // @@protoc_insertion_point(field_get:manager.layer.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void manager_layer::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.layer.name)
}
void manager_layer::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.layer.name)
}
void manager_layer::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.layer.name)
}
::std::string* manager_layer::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:manager.layer.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* manager_layer::release_name() {
  // @@protoc_insertion_point(field_release:manager.layer.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void manager_layer::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:manager.layer.name)
}

// required int32 type = 2;
bool manager_layer::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void manager_layer::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void manager_layer::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void manager_layer::clear_type() {
  type_ = 0;
  clear_has_type();
}
::google::protobuf::int32 manager_layer::type() const {
  // @@protoc_insertion_point(field_get:manager.layer.type)
  return type_;
}
void manager_layer::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:manager.layer.type)
}

// repeated int32 top = 3;
int manager_layer::top_size() const {
  return top_.size();
}
void manager_layer::clear_top() {
  top_.Clear();
}
::google::protobuf::int32 manager_layer::top(int index) const {
  // @@protoc_insertion_point(field_get:manager.layer.top)
  return top_.Get(index);
}
void manager_layer::set_top(int index, ::google::protobuf::int32 value) {
  top_.Set(index, value);
  // @@protoc_insertion_point(field_set:manager.layer.top)
}
void manager_layer::add_top(::google::protobuf::int32 value) {
  top_.Add(value);
  // @@protoc_insertion_point(field_add:manager.layer.top)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
manager_layer::top() const {
  // @@protoc_insertion_point(field_list:manager.layer.top)
  return top_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
manager_layer::mutable_top() {
  // @@protoc_insertion_point(field_mutable_list:manager.layer.top)
  return &top_;
}

// optional int32 bottom = 4;
bool manager_layer::has_bottom() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void manager_layer::set_has_bottom() {
  _has_bits_[0] |= 0x00000008u;
}
void manager_layer::clear_has_bottom() {
  _has_bits_[0] &= ~0x00000008u;
}
void manager_layer::clear_bottom() {
  bottom_ = 0;
  clear_has_bottom();
}
::google::protobuf::int32 manager_layer::bottom() const {
  // @@protoc_insertion_point(field_get:manager.layer.bottom)
  return bottom_;
}
void manager_layer::set_bottom(::google::protobuf::int32 value) {
  set_has_bottom();
  bottom_ = value;
  // @@protoc_insertion_point(field_set:manager.layer.bottom)
}

// optional int32 phase = 5;
bool manager_layer::has_phase() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void manager_layer::set_has_phase() {
  _has_bits_[0] |= 0x00000010u;
}
void manager_layer::clear_has_phase() {
  _has_bits_[0] &= ~0x00000010u;
}
void manager_layer::clear_phase() {
  phase_ = 0;
  clear_has_phase();
}
::google::protobuf::int32 manager_layer::phase() const {
  // @@protoc_insertion_point(field_get:manager.layer.phase)
  return phase_;
}
void manager_layer::set_phase(::google::protobuf::int32 value) {
  set_has_phase();
  phase_ = value;
  // @@protoc_insertion_point(field_set:manager.layer.phase)
}

inline const manager_layer* manager_layer::internal_default_instance() {
  return &manager_layer_default_instance_.get();
}
// -------------------------------------------------------------------

// manager

// required .manager.layer t1 = 1;
bool manager::has_t1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void manager::set_has_t1() {
  _has_bits_[0] |= 0x00000001u;
}
void manager::clear_has_t1() {
  _has_bits_[0] &= ~0x00000001u;
}
void manager::clear_t1() {
  if (t1_ != NULL) t1_->::manager_layer::Clear();
  clear_has_t1();
}
const ::manager_layer& manager::t1() const {
  // @@protoc_insertion_point(field_get:manager.t1)
  return t1_ != NULL ? *t1_
                         : *::manager_layer::internal_default_instance();
}
::manager_layer* manager::mutable_t1() {
  set_has_t1();
  if (t1_ == NULL) {
    t1_ = new ::manager_layer;
  }
  // @@protoc_insertion_point(field_mutable:manager.t1)
  return t1_;
}
::manager_layer* manager::release_t1() {
  // @@protoc_insertion_point(field_release:manager.t1)
  clear_has_t1();
  ::manager_layer* temp = t1_;
  t1_ = NULL;
  return temp;
}
void manager::set_allocated_t1(::manager_layer* t1) {
  delete t1_;
  t1_ = t1;
  if (t1) {
    set_has_t1();
  } else {
    clear_has_t1();
  }
  // @@protoc_insertion_point(field_set_allocated:manager.t1)
}

// required string manager_name = 2;
bool manager::has_manager_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void manager::set_has_manager_name() {
  _has_bits_[0] |= 0x00000002u;
}
void manager::clear_has_manager_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void manager::clear_manager_name() {
  manager_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_manager_name();
}
const ::std::string& manager::manager_name() const {
  // @@protoc_insertion_point(field_get:manager.manager_name)
  return manager_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void manager::set_manager_name(const ::std::string& value) {
  set_has_manager_name();
  manager_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:manager.manager_name)
}
void manager::set_manager_name(const char* value) {
  set_has_manager_name();
  manager_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:manager.manager_name)
}
void manager::set_manager_name(const char* value, size_t size) {
  set_has_manager_name();
  manager_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:manager.manager_name)
}
::std::string* manager::mutable_manager_name() {
  set_has_manager_name();
  // @@protoc_insertion_point(field_mutable:manager.manager_name)
  return manager_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* manager::release_manager_name() {
  // @@protoc_insertion_point(field_release:manager.manager_name)
  clear_has_manager_name();
  return manager_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void manager::set_allocated_manager_name(::std::string* manager_name) {
  if (manager_name != NULL) {
    set_has_manager_name();
  } else {
    clear_has_manager_name();
  }
  manager_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), manager_name);
  // @@protoc_insertion_point(field_set_allocated:manager.manager_name)
}

inline const manager* manager::internal_default_instance() {
  return &manager_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
